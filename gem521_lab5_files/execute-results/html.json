{
  "hash": "7222f861e1bc490f834e55df9bde1c29",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Individual Trees Detecting using different methods\"\nformat: html\neditor: visual\n---\n\n\n\n\n::: panel-tabset\n## Background\n\nThe Malcolm Knapp Research Forest (MKRF) is a 5,157-hectare forest located in Maple Ridge, British Columbia, approximately 60 km from Vancouver (The University of British Columbia, n.d.). Established in 1949, it serves as a world-class environment for research and education in forestry and sciences (The University of British Columbia, n.d.).\n\nIndividual tree detection (ITD) is a crucial technique in forest inventory and management for subsequent estimation of tree species, height, diameter, crown size and location (Luo et al., n.d). In this task, I am doing ITD using point cloud method and canopy height model derived method. The methods used in this tasks are based on Li et al., 2012 and Dalponte & Coomes, 2016.\n\n## Objectives\n\nThe aim of this work is to apply 2 methods from Li et al. 2012 and Dalponte and Coomes 2016, which are point cloud method and CHM derived method.\n\n## Data descriptions\n\n-   LiDAR point cloud data\n\n## References\n\nDalponte, M., & Coomes, D. A. (2016). Tree-centric mapping of forest carbon density from airborne laser scanning and hyperspectral data. Methods in Ecology and Evolution, 7(10), 1236-1245.\n\nLi, W., Guo, Q., Jakubowski, M. K., & Kelly, M. (2012). A new method for segmenting individual trees from the lidar point cloud. Photogrammetric Engineering & Remote Sensing, 78(1), 75-84.\n\nLuo, Z., Zhang, Z., Li, W., Chen, Y., Wang, C., Nurunnabi, A., & Li, J. (n.d). Detection of individual trees in UAV LiDAR point clouds using a deep learning framework based on multi-channel representation. IEEE Transactions on Geoscience and Remote Sensing, 59(7), 5769-5785.\n:::\n\n## Code\n\nLoad the necessary library\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lidR)\nlibrary(terra)\nlibrary(tidyverse)\nlibrary(rgl)\n```\n:::\n\n\n\n\n\nPreparation of data for analysis\n\nFor this study, the LiDAR point cloud data, stored in .las files, had already been normalized. This pre-processing step simplifies subsequent analysis by adjusting the elevation values relative to the ground surface rather than absolute elevation.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read normalized .las file into catalog for further processing\nnorm_cat_mkrf <- readLAScatalog(\"C:/Users/hphung.stu/Downloads/GEM521/Labs/Lab 2/L2_data/Data/Normalized\")\n\n# Filter the points with height below 0m and above 65m\nopt_filter(norm_cat_mkrf) <- '-drop_z_below 0 -drop_z_above 65'\n```\n:::\n\n\n\n\n\nExtract the specific plot. The coordinate of the plot is listed in the .csv files.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extract specific plot\nlab5_plot_table <- read.csv(\"C:/Users/hphung.stu/Downloads/GEM521/Labs/Lab 5/Data/lab5_Plots.csv\")\n\n#define the radius\nradius <- 154\n\n#use for loop to extract the plots\nfor (i in 1:nrow(lab5_plot_table)){\n  lab5_plot_cent <- c(lab5_plot_table$X[i], lab5_plot_table$Y[i]) #extract plot center coordinates\n  plot_las <- clip_circle(norm_cat_mkrf, lab5_plot_cent[1], lab5_plot_cent[2], radius) #clip plot from norm_cat_mkrf\n  output_file <- paste(\"C:/Users/hphung.stu/Downloads/GEM521/Labs/Lab 5/Data/Lab5_Plots/Lab5_Plot_\", \n                       i, \".las\", sep = \"\") #output directory as string\n  writeLAS(assign(paste(\"C:/Users/hphung.stu/Downloads/GEM521/Labs/Lab 5/Data/Lab5_Plots/Lab5_Plot_\", \n                        i, sep = \"\"), plot_las), output_file) #write'MKRF_Plot_i' to output dir.\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChunk 1 of 1 (100%): state ✓\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](gem521_lab5_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChunk 1 of 1 (100%): state ✓\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChunk 1 of 1 (100%): state ✓\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](gem521_lab5_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChunk 1 of 1 (100%): state ✓\n```\n\n\n:::\n:::\n",
    "supporting": [
      "gem521_lab5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}