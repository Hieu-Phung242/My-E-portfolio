[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Exploring the Art of Solutions and Design - Innovating at the crossroads of environment and technology",
    "section": "",
    "text": "Hello\nMy name is Hieu (Heal) Phung.\nI am currently studying Master of Geomatics for Environmental Management at The University of British Columbia.\nBefore coming to Canada, I have completed my Bachelor’s in Energy and Environmental Engineering at Tampere University of Applied Sciences in Finland. I also completed one Master’s programme in Environmental Engineering in Tampere University in Finland.\nIt is interesting that, after my first master’s graduation, I decided to revolve my career path to the field of GIS and Forestry.\nIn my e-portfolio, I hope to deliver insights, creativity and innovations to readers.\nThank you and enjoy your time exploring my space. Should you have any questions, please do not hesitate to send me an email.\n\nSkills: ArcGIS Pro, QGIS, R coding, Python, ENVI, AutoCAD, AutoCAD Plant 3D"
  },
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Resume",
    "section": "",
    "text": "Master of Geomatics for Environmental Management (July, 2024 - current)\nThe University of British Columbia\nCapstone Project: Detecting change of aboveground biomass using Landsat 9, GEDI, and their combination in Kwahu South, Ghana.\nMaster of Science (Technology) in Environmental Engineering (August, 2020 - July, 2023)\nTampere University\nThesis: Molten Carbonate Salt Electrolysis - Materials Selection, Experimental Design, and Carbon Production.\nBachelor of Engineer in Energy and Environmental Engineering (August, 2015 - June, 2019)\nTampere University of Applied Sciences\nThesis: Effect if Graphene/Gold - nanoparticles composite on the photocatalytics activity of Titan Dioxide."
  },
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Publications",
    "section": "",
    "text": "Peer-reviewed publications:\nDespite listing them on your resume, it may also be pertinent to create a seperate tab for publications and reports. As your career progresses, this list may become quite long, so be sure to organize things. You may want to point to ‘most recent’ publications, or categorize things by project/topic."
  },
  {
    "objectID": "content_development.html",
    "href": "content_development.html",
    "title": "Content & Deliverables",
    "section": "",
    "text": "Project Deliverable 1\nThis is a sample page where you can archive project deliverables."
  },
  {
    "objectID": "content.html",
    "href": "content.html",
    "title": "Content & Deliverables",
    "section": "",
    "text": "BackgroundObjectives\n\n\nContent details go here.\n\n\nDeliverables information goes here.\n\n\n\n\n\nSample leaflet - for detailed leaflet instructions, visit the FCOR 599 workshop archive page here.\n\n\n\n\n\n\n\n\n\nSample code snippet. Notice that you can provide a toggle to switch between coding languages - this is referred to as a ‘tabset’ in quarto. It is good practice to try and convert your R code to python, and vice-versa to demonstrate coding proficiency. For example, let’s showcase a function for calculating NDVI in R and Python.\n\nRPython\n\n\ncalc_ndvi &lt;- function(nir, red){ ndvi &lt;- (nir-red)/(nir+red) return(ndvi) }\n\n\ndef calc_ndvi(nir, red): \n  ndvi = (nir.astype(float)-red.astype(float))/(nir.astype(float)+red.astype(float))\n  return(ndvi)\n\n\n\n\n\n\nYou can also provide a frame linking to external websites. For example, here is a link to a Google Earth Engine application I developed. The full-screen GEE application is available here in case you’re interested.\n(To use the GEE tool, navigate to any city you’d like, hit apply filters, and click anywhere on the map to retrieve a time-series of Landsat surface temperature observations for that point. Areas where the maximum temp exceeded 35 degrees Celsius in your date-range are highlighted in red.)"
  },
  {
    "objectID": "content.html#leaflet",
    "href": "content.html#leaflet",
    "title": "Content & Deliverables",
    "section": "",
    "text": "Sample leaflet - for detailed leaflet instructions, visit the FCOR 599 workshop archive page here."
  },
  {
    "objectID": "content.html#code-snippets",
    "href": "content.html#code-snippets",
    "title": "Content & Deliverables",
    "section": "",
    "text": "Sample code snippet. Notice that you can provide a toggle to switch between coding languages - this is referred to as a ‘tabset’ in quarto. It is good practice to try and convert your R code to python, and vice-versa to demonstrate coding proficiency. For example, let’s showcase a function for calculating NDVI in R and Python.\n\nRPython\n\n\ncalc_ndvi &lt;- function(nir, red){ ndvi &lt;- (nir-red)/(nir+red) return(ndvi) }\n\n\ndef calc_ndvi(nir, red): \n  ndvi = (nir.astype(float)-red.astype(float))/(nir.astype(float)+red.astype(float))\n  return(ndvi)"
  },
  {
    "objectID": "content.html#external-links",
    "href": "content.html#external-links",
    "title": "Content & Deliverables",
    "section": "",
    "text": "You can also provide a frame linking to external websites. For example, here is a link to a Google Earth Engine application I developed. The full-screen GEE application is available here in case you’re interested.\n(To use the GEE tool, navigate to any city you’d like, hit apply filters, and click anywhere on the map to retrieve a time-series of Landsat surface temperature observations for that point. Areas where the maximum temp exceeded 35 degrees Celsius in your date-range are highlighted in red.)"
  },
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "aboutme",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "aboutme.html#quarto",
    "href": "aboutme.html#quarto",
    "title": "aboutme",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "aboutme.html#running-code",
    "href": "aboutme.html#running-code",
    "title": "aboutme",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "resume.html#environmental-specialist-internship-hanoi-vietnam",
    "href": "resume.html#environmental-specialist-internship-hanoi-vietnam",
    "title": "Resume",
    "section": "Environmental Specialist (Internship) Hanoi, Vietnam",
    "text": "Environmental Specialist (Internship) Hanoi, Vietnam\n\nSTI Vietnam (July, 2023 - September, 2023)\n\nConducted research on carbon market and carbon trade in Vietnam as well as in South-East Asia region.\nContributed to write the proposal for the project of LiDAR Image Processing using AI for Affordable Forest Carbon Credit Evaluation and Monitoring in Laos and Vietnam.\nWebsite: https://stivina.com/"
  },
  {
    "objectID": "resume.html#research-assistant-tampere-finland",
    "href": "resume.html#research-assistant-tampere-finland",
    "title": "Resume",
    "section": "Research Assistant Tampere, Finland",
    "text": "Research Assistant Tampere, Finland\n\nTampere University (February, 2022 - June, 2023)\n\nResearched on CO2 capture by molten salt electrolysis in Hydrogen and Carbon Value Chain (HYGCEL) project.\nDesigned and constructed laboratory scale system for experiment of molten salt electrolysis.\nSuccessfully found a material that was not only cost-effective but also durable for the molten salt electrolysis process.\nManaged to produce carbon nano-onion product as well as other tubular carbon products.\nRead more: http://bit.ly/4gGXPvq"
  },
  {
    "objectID": "resume.html#cad-designer-trainee-tampere-finland",
    "href": "resume.html#cad-designer-trainee-tampere-finland",
    "title": "Resume",
    "section": "CAD Designer Trainee Tampere, Finland",
    "text": "CAD Designer Trainee Tampere, Finland\n\nRamboll Finland Oy (May, 2021 - August, 2021)\n\nParticipated in on-the-job training, working closely with supervisors and coworkers (team of 10 people) and asking appropriate quations.\nDesigned Pipe and Instrument Diagram (P&ID) for water and wastewater treament plant in AutoCAD and AutoCAD Plant 3D.\nSketched a pumping station, which included 3D designed and orthographic drawing in AutoCAD Plant 3D.\nWebsite: https://www.ramboll.com/fi-fi"
  },
  {
    "objectID": "thesis2.html",
    "href": "thesis2.html",
    "title": "Effect of Graphene/Gold - nanoparticles composite on the photocatalytics activity of TiO2",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "thesis2.html#quarto",
    "href": "thesis2.html#quarto",
    "title": "Effect of Graphene/Gold - nanoparticles composite on the photocatalytics activity of TiO2",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "thesis2.html#running-code",
    "href": "thesis2.html#running-code",
    "title": "Effect of Graphene/Gold - nanoparticles composite on the photocatalytics activity of TiO2",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "thesis1.html",
    "href": "thesis1.html",
    "title": "Molten Salt Carbonate Electrolysis",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "thesis1.html#quarto",
    "href": "thesis1.html#quarto",
    "title": "Molten Salt Carbonate Electrolysis",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "thesis1.html#running-code",
    "href": "thesis1.html#running-code",
    "title": "Molten Salt Carbonate Electrolysis",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Contact",
    "section": "",
    "text": "Email: phungchihieu24296@gmail.com\n\n  LinkedIn"
  },
  {
    "objectID": "contact.html#quarto",
    "href": "contact.html#quarto",
    "title": "Contact",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "contact.html#running-code",
    "href": "contact.html#running-code",
    "title": "Contact",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "other_projects.html",
    "href": "other_projects.html",
    "title": "Other Projects",
    "section": "",
    "text": "Exploring my work beyond Forestry and Remote Sensing\nIn this space, you can find other projects and works that are relevant to environment, energy and material science.\n\n\n\nEnvironment"
  },
  {
    "objectID": "other_projects.html#quarto",
    "href": "other_projects.html#quarto",
    "title": "Other Projects",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "other_projects.html#running-code",
    "href": "other_projects.html#running-code",
    "title": "Other Projects",
    "section": "",
    "text": "When you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "thesis1.html#section",
    "href": "thesis1.html#section",
    "title": "Molten Salt Carbonate Electrolysis",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "thesis2.html#this-is-my-bachelors-thesis-at-tampere-university-of-applied-sciences",
    "href": "thesis2.html#this-is-my-bachelors-thesis-at-tampere-university-of-applied-sciences",
    "title": "Effect of Graphene/Gold - nanoparticles composite on the photocatalytics activity of TiO2",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "thesis1.html#this-is-my-masters-thesis-at-tampere-university",
    "href": "thesis1.html#this-is-my-masters-thesis-at-tampere-university",
    "title": "Molten Salt Carbonate Electrolysis",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "gem520_finallab.html",
    "href": "gem520_finallab.html",
    "title": "Analysis of Burn Severity and Vegetation Recovery at Prouton Lake, BC",
    "section": "",
    "text": "ObjectivesData descriptions\n\n\nContent details go here.\n\n\nDeliverables information goes here."
  },
  {
    "objectID": "gem520_finallab.html#introduction",
    "href": "gem520_finallab.html#introduction",
    "title": "Analysis of Burn Severity and Vegetation Recovery at Prouton Lake, BC",
    "section": "",
    "text": "ObjectivesData descriptions\n\n\nContent details go here.\n\n\nDeliverables information goes here."
  },
  {
    "objectID": "gem520_finallab.html#running-code",
    "href": "gem520_finallab.html#running-code",
    "title": "Analysis of Burn Severity and Vegetation Recovery at Prouton Lake, BC",
    "section": "Running Code",
    "text": "Running Code\nTo begin with, I loaded the necessary library used for this analysis task.\n\nlibrary(terra)\nlibrary(sf)\nlibrary(readr)\nlibrary(stringr)\nlibrary(lubridate)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(bfast)\n\nRead the data files to investigate the data and extract the information about total area burned in 2017\n\nh_fire_ply_polygon &lt;- st_read(\"C:/Users/hphung.stu/Downloads/GEM520/Labs/Lab8/lab8_finalDemonstrationOfRSkills-assign/data/PROT_HISTORICAL_FIRE_POLYS_SP/H_FIRE_PLY_polygon.shp\", quiet = TRUE)\n\n# Extract the data for the year 2017\nfire_2017 &lt;- h_fire_ply_polygon %&gt;% \n  filter(FIRE_YEAR == 2017)\n\n# Number of fire\nnumber_of_fire &lt;- nrow(fire_2017)\nprint(number_of_fire)\n\n[1] 342\n\n# Total land area burned\ntotal_area_burned &lt;- sum(fire_2017$SIZE_HA)\nprint(total_area_burned)\n\n[1] 1222205\n\n\n\n# Create a bar plot showing total area burned per year in BC\nfire_by_year &lt;- h_fire_ply_polygon %&gt;% \n  st_drop_geometry() %&gt;% \n  group_by(FIRE_YEAR, FIRE_CAUSE) %&gt;% \n  summarize(TOTAL_AREA = sum(SIZE_HA, na.rm = TRUE))\n\n\n# Create a bar plot showing total area burned per year in BC\n\nggplot(fire_by_year, aes(x = FIRE_YEAR, y = TOTAL_AREA, fill = FIRE_CAUSE)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_brewer(palette = \"Set1\") +\n  labs(x = \"Year\", y = \"Total Area Burned (Hectares)\", \n       title = \"Total Area Burned per Year in BC by Fire Cause\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\n# Find the burned area at Prouton Lake by ID = C30870\nburned_area_ID &lt;- h_fire_ply_polygon$FIRE_NO == \"C30870\"\nprouton_fire &lt;- h_fire_ply_polygon[burned_area_ID, ]\nprint(prouton_fire$SIZE_HA)\n\n[1] 859.3\n\n\n\n# List all L2 product directories\nl2_directories &lt;- list.dirs(\"C:/Users/hphung.stu/Downloads/GEM520/Labs/Lab8/lab8_finalDemonstrationOfRSkills-assign/data/Landsat 8 OLI_TIRS C2 L2\", \n                            full.names = TRUE, \n                            recursive = FALSE)\n\n# Use prouton_fire as fire extent object\nprouton_lake_fire_extent &lt;- prouton_fire\n\nfor (dir in l2_directories) {\n  product_id &lt;- basename(dir)\n  \n  # Load surface reflectance bands\n  sr_files &lt;- list.files(dir, pattern = \"_SR_B[1-7].TIF$\", full.names = TRUE)\n  sr_stack &lt;- rast(sr_files)\n  \n  # Load QA_PIXEL layers\n  qa_file &lt;- list.files(dir, pattern = \"_QA_PIXEL.TIF$\", full.names = TRUE)\n  qa_layer &lt;- rast(qa_file)\n  \n  # Mask pixels that do not have the value 21824\n  sr_masked &lt;- mask(sr_stack, qa_layer == 21824)\n  \n  # Crop to Prouton Lakes fire extent\n  prouton_lake_fire_extent &lt;- st_transform(prouton_lake_fire_extent, crs(sr_masked)) # Match the crs\n  sr_cropped &lt;- crop(sr_masked, prouton_lake_fire_extent)\n  \n  # Calculate NDVI\n  ndvi &lt;- (sr_cropped[[5]] - sr_cropped[[4]]) / (sr_cropped[[5]] + sr_cropped[[4]])\n  \n  # Calculate NBR\n  nbr &lt;- (sr_cropped[[5]] - sr_cropped[[7]]) / (sr_cropped[[5]] + sr_cropped[[7]])\n  \n  # Save outputs\n  writeRaster(sr_cropped, filename = file.path(\"C:/Users/hphung.stu/Downloads/GEM520/Labs/Lab8/lab8_finalDemonstrationOfRSkills-assign/output/LC08_L2SP_048023_SR\", \n                                               paste0(product_id, \"_SR.tif\")), \n              overwrite = TRUE)\n  writeRaster(ndvi, filename = file.path(\"C:/Users/hphung.stu/Downloads/GEM520/Labs/Lab8/lab8_finalDemonstrationOfRSkills-assign/output/LC08_L2SP_048023_NDVI\", \n                                         paste0(product_id, \"_NDVI.tif\")), \n              overwrite = TRUE)\n  writeRaster(nbr, filename = file.path(\"C:/Users/hphung.stu/Downloads/GEM520/Labs/Lab8/lab8_finalDemonstrationOfRSkills-assign/output/LC08_L2SP_048023_NBR\", \n                                        paste0(product_id, \"_NBR.tif\")), \n              overwrite = TRUE)\n  \n}\n\n\n# Extract the date from SR file\nflist_sr &lt;- list.files(\"C:/Users/hphung.stu/Downloads/GEM520/Labs/Lab8/lab8_finalDemonstrationOfRSkills-assign/output/LC08_L2SP_048023_SR\",\n           pattern = \"tif$\",\n           full.name = TRUE)\n\nfname_sr &lt;- basename(flist_sr)\n\ndate_sr &lt;- str_sub(fname_sr, start = 18, end = 25)\n\ndate_object_sr &lt;- lubridate::as_date(date_sr,\n                                     format = \"%Y%m%d\")\n\n# Pre-fire and post-fire images\npre_fire &lt;- rast(\"C:/Users/hphung.stu/Downloads/GEM520/Labs/Lab8/lab8_finalDemonstrationOfRSkills-assign/output/LC08_L2SP_048023_SR/LC08_L2SP_048023_20150707_20200909_02_T1_SR.tif\")\n\npost_fire &lt;- rast(\"C:/Users/hphung.stu/Downloads/GEM520/Labs/Lab8/lab8_finalDemonstrationOfRSkills-assign/output/LC08_L2SP_048023_SR/LC08_L2SP_048023_20180715_20200831_02_T1_SR.tif\")\n\n\n# Create true color composite\nplotRGB(pre_fire, r = 4, g = 3, b = 2, stretch = \"lin\")\n\n\n\n\n\n\n\nplotRGB(post_fire, r = 4, g = 3, b = 2, stretch = \"lin\")\n\n\n\n\n\n\n\n\n\n# List all the NDVI files\nndvi_files &lt;- list.files(\"C:/Users/hphung.stu/Downloads/GEM520/Labs/Lab8/lab8_finalDemonstrationOfRSkills-assign/output/LC08_L2SP_048023_NDVI\",\n                         pattern = \"tif$\",\n                         full.name = TRUE)\nlength(ndvi_files)\n\n[1] 35\n\nfname_ndvi &lt;- basename(ndvi_files) # extract the file name from the full file path\nfname_ndvi[1:5]\n\n[1] \"LC08_L2SP_048023_20130701_20200912_02_T1_NDVI.tif\"\n[2] \"LC08_L2SP_048023_20130717_20200912_02_T1_NDVI.tif\"\n[3] \"LC08_L2SP_048023_20130802_20200912_02_T1_NDVI.tif\"\n[4] \"LC08_L2SP_048023_20130818_20200913_02_T2_NDVI.tif\"\n[5] \"LC08_L2SP_048023_20140704_20200911_02_T1_NDVI.tif\"\n\n# Extract year and month from NDVI file names\nndvi_dates_extract &lt;- str_sub(fname_ndvi, start = 18, end = 25)\nndvi_dates &lt;- as_date(ndvi_dates_extract, format = \"%Y%m%d\")\nndvi_years &lt;- lubridate::year(ndvi_dates)\nndvi_months &lt;- lubridate::month(ndvi_dates)\n\n# Filter for July and August of NDVI files\nndvi_july_august &lt;- ndvi_files[ndvi_months %in% c(7,8)]\nyears_july_august_ndvi &lt;- ndvi_years[ndvi_months %in% c(7,8)]\n\n# Group the file by year and calculate mean composite for NDVI\nyearly_composites_ndvi &lt;- list()\n\nfor (year in unique(years_july_august_ndvi)) {\n  year_files_ndvi &lt;- ndvi_july_august[years_july_august_ndvi == year]\n  raster_stack_ndvi &lt;- rast(year_files_ndvi)\n  yearly_composite_ndvi &lt;- app(raster_stack_ndvi, mean, na.rm = TRUE)\n  yearly_composites_ndvi[[as.character(year)]] &lt;- yearly_composite_ndvi\n}\n\n\n# List all the NBR files\nnbr_files &lt;- list.files(\"C:/Users/hphung.stu/Downloads/GEM520/Labs/Lab8/lab8_finalDemonstrationOfRSkills-assign/output/LC08_L2SP_048023_NBR\",\n                        pattern = \"tif$\",\n                        full.name = TRUE)\nlength(nbr_files)\n\n[1] 35\n\nfname_nbr &lt;- basename(nbr_files)\nfname_nbr[1:5]\n\n[1] \"LC08_L2SP_048023_20130701_20200912_02_T1_NBR.tif\"\n[2] \"LC08_L2SP_048023_20130717_20200912_02_T1_NBR.tif\"\n[3] \"LC08_L2SP_048023_20130802_20200912_02_T1_NBR.tif\"\n[4] \"LC08_L2SP_048023_20130818_20200913_02_T2_NBR.tif\"\n[5] \"LC08_L2SP_048023_20140704_20200911_02_T1_NBR.tif\"\n\n# Extract year and month from NBR file names\nnbr_dates_extract &lt;- str_sub(fname_nbr, start = 18, end = 25)\nnbr_dates &lt;- as_date(nbr_dates_extract, format = \"%Y%m%d\")\nnbr_years &lt;- lubridate::year(nbr_dates)\nnbr_months &lt;- lubridate::month(nbr_dates)\n\n# Filter for July and August of NBR files\nnbr_july_august &lt;- nbr_files[nbr_months %in% c(7,8)]\nyears_july_august_nbr &lt;- nbr_years[nbr_months %in% c(7,8)]\n\n# Group the file by year and calculate mean composite for NBR\nyearly_composites_nbr &lt;- list()\n\nfor (year in unique(years_july_august_nbr)) {\n  year_files_nbr &lt;- nbr_july_august[years_july_august_nbr == year]\n  raster_stack_nbr &lt;- rast(year_files_nbr)\n  yearly_composite_nbr &lt;- app(raster_stack_nbr, mean, na.rm = TRUE)\n  yearly_composites_nbr[[as.character(year)]] &lt;- yearly_composite_nbr\n}\n\n\n# Prouton Lake fire extent CRS matching\nprouton_lake_fire_extent &lt;- st_transform(prouton_fire, \n                                         crs(yearly_composites_ndvi[[1]]))\n\n# Calculate average NDVI for each year\navg_ndvi_per_year &lt;- data.frame(Year = integer(), Avg_NDVI = numeric())\n\nfor (year in names(yearly_composites_ndvi)) {\n  composite &lt;- yearly_composites_ndvi[[year]]\n  masked &lt;- mask(composite, vect(prouton_lake_fire_extent))\n  avg_ndvi &lt;- global(masked, mean, na.rm = TRUE)$mean\n  avg_ndvi_per_year &lt;- rbind(avg_ndvi_per_year, \n                             data.frame(Year = as.integer(year), \n                                        Avg_NDVI = avg_ndvi))\n}\n\n\n# Plot\nggplot(avg_ndvi_per_year, aes(x = Year, y = Avg_NDVI)) +\n  geom_point() +\n  geom_line(group = 1) +\n  labs(x = \"Year\", y = \"Average NDVI\", \n       title = \"Average NDVI Across Prouton Lakes Fire (2013-2021)\") +\n  theme_minimal() +\n  scale_x_continuous(breaks = seq(min(avg_ndvi_per_year$Year), \n                                  max(avg_ndvi_per_year$Year), \n                                  by = 1))\n\n\n\n\n\n\n\n\n\n# Extract pre-fire 2015 and post fire 2018 NBR\nnbr_2015 &lt;- yearly_composites_nbr[[\"2015\"]] # Pre-fire NBR\nnbr_2018 &lt;- yearly_composites_nbr[[\"2018\"]] # Post-fire NBR\n\n# Calculate dNBR\ndnbr &lt;- nbr_2015 - nbr_2018\n\n# Define reclassification matrix for burn severity\nreclass_matrix &lt;- matrix(c(-0.2, 0.15, 1,    \n                           0.15, 0.25, 2,    \n                           0.25, 0.3, 3,     \n                           0.3, 1, 4),       \n                         byrow = TRUE, ncol = 3)\n\n\n# Reclassify dNBR\nburn_severity &lt;- classify(dnbr, reclass_matrix)\n\n\n# Set levels to the reclassified raster\nlevels(burn_severity) &lt;- data.frame(id = c(1, 2, 3, 4),\n                                    label = c(\"unburned\", \n                                              \"low severity\", \n                                              \"medium severity\", \n                                              \"high severity\"))\n\n\n# Convert raster to dataframe for ggplot\nseverity_df &lt;- as.data.frame(burn_severity, xy = TRUE)\n\n# Plot dNBR raster by using the severity_df data\nggplot() +\n  geom_raster(data = severity_df, aes(x = x, y = y, fill = label)) +\n  geom_sf(data = st_as_sf(prouton_lake_fire_extent), fill = NA, color = \"red\") +\n  scale_fill_manual(values = c(\"green\", \"yellow\", \"orange\", \"red\"),\n                    name = \"Burn Severity\") +\n  theme_minimal() +\n  labs(title = \"Burn Severity of Prouton Lakes Fire\",\n       x = \"Longitude\", y = \"Latitude\") +\n  coord_sf()"
  },
  {
    "objectID": "gem520_finallab.html#post-fire-vegetation-recovery",
    "href": "gem520_finallab.html#post-fire-vegetation-recovery",
    "title": "Analysis of Burn Severity and Vegetation Recovery at Prouton Lake, BC",
    "section": "Post-fire vegetation recovery",
    "text": "Post-fire vegetation recovery\n\n# Convert burn severity raster to polygons\nburn_severity_masked &lt;- mask(burn_severity, vect(prouton_lake_fire_extent))  # Mask to the fire extent\nburn_severity_polygons &lt;- as.polygons(burn_severity_masked, dissolve = TRUE)\n\n# Create an ID column in burn_severity_polygons\nburn_severity_polygons$ID &lt;- 1:nrow(burn_severity_polygons)\n\n# Extract NDVI values for each year and burn severity class\nyears &lt;- c(2018, 2019, 2020, 2021)\nndvi_values &lt;- list()\n\nfor (year in years) {\n  ndvi_raster &lt;- yearly_composites_ndvi[[as.character(year)]]\n  \n  # Extract NDVI values by burn severity polygons\n  extracted_values &lt;- terra::extract(ndvi_raster, burn_severity_polygons,\n                                     xy = TRUE, ID = TRUE)\n  \n  # Add burn severity class and year to extracted data\n  extracted_values &lt;- merge(extracted_values, burn_severity_polygons, by = \"ID\",\n                            all.x = TRUE)\n  \n  # Add the year column to the extracted data\n  extracted_values$year &lt;- year\n  ndvi_values[[as.character(year)]] &lt;- extracted_values\n}\n\n# Combine data for all years into a single dataframe\nndvi_all_years &lt;- do.call(rbind, ndvi_values)\nhead(ndvi_all_years)\n\n       ID      mean      x       y    label year\n2018.1  1 0.2663470 585420 5814480 unburned 2018\n2018.2  1 0.2561202 585450 5814480 unburned 2018\n2018.3  1 0.2355936 585390 5814450 unburned 2018\n2018.4  1 0.2287356 585420 5814450 unburned 2018\n2018.5  1 0.2395178 585450 5814450 unburned 2018\n2018.6  1 0.2413820 585480 5814450 unburned 2018\n\n# Ensure burn severity is an ordered factor\nndvi_all_years$severity &lt;- factor(ndvi_all_years$label, \n                                  levels = c(\"unburned\", \n                                             \"low severity\", \n                                             \"medium severity\", \n                                             \"high severity\"),\n                                  ordered = TRUE)\n\n\n# Plot yearly NDVI composites\nfor (year in years) {\n  plot(yearly_composites_ndvi[[as.character(year)]], \n       main = paste(\"Yearly NDVI Composite -\", year), \n       range = c(0, 0.5))  # Set the same value range for all plots\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Create a boxplot of NDVI distributions\nggplot(ndvi_all_years, aes(x = severity, y = mean, fill = severity)) +\n  geom_boxplot() +\n  facet_wrap(~ year) +\n  scale_fill_manual(values = c(\"unburned\" = \"green\", \n                               \"low severity\" = \"yellow\", \n                               \"medium severity\" = \"orange\", \n                               \"high severity\" = \"red\"),\n                    name = \"Burn Severity\") +\n  labs(title = \"Distribution of NDVI Values by Burn Severity Class\",\n       x = \"Burn Severity Class\",\n       y = \"NDVI\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))"
  },
  {
    "objectID": "gem521_lab5.html",
    "href": "gem521_lab5.html",
    "title": "Individual Trees Detecting using different methods",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "gem521_lab5.html#quarto",
    "href": "gem521_lab5.html#quarto",
    "title": "Individual Trees Detecting using different methods",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "gem521_lab5.html#running-code",
    "href": "gem521_lab5.html#running-code",
    "title": "Individual Trees Detecting using different methods",
    "section": "Running Code",
    "text": "Running Code"
  },
  {
    "objectID": "gem521_lab5.html#code",
    "href": "gem521_lab5.html#code",
    "title": "Individual Trees Detecting using different methods",
    "section": "Code",
    "text": "Code\nLoad the necessary library\n\nlibrary(lidR)\nlibrary(terra)\nlibrary(tidyverse)\nlibrary(rgl)\n\nPreparation of data for analysis\nFor this study, the LiDAR point cloud data, stored in .las files, had already been normalized. This pre-processing step simplifies subsequent analysis by adjusting the elevation values relative to the ground surface rather than absolute elevation.\n\n# Read normalized .las file into catalog for further processing\nnorm_cat_mkrf &lt;- readLAScatalog(\"C:/Users/hphung.stu/Downloads/GEM521/Labs/Lab 2/L2_data/Data/Normalized\")\n\n# Filter the points with height below 0m and above 65m\nopt_filter(norm_cat_mkrf) &lt;- '-drop_z_below 0 -drop_z_above 65'\n\nExtract the specific plot. The coordinate of the plot is listed in the .csv files.\n\n# Extract specific plot\nlab5_plot_table &lt;- read.csv(\"C:/Users/hphung.stu/Downloads/GEM521/Labs/Lab 5/Data/lab5_Plots.csv\")\n\n#define the radius\nradius &lt;- 154\n\n#use for loop to extract the plots\nfor (i in 1:nrow(lab5_plot_table)){\n  lab5_plot_cent &lt;- c(lab5_plot_table$X[i], lab5_plot_table$Y[i]) #extract plot center coordinates\n  plot_las &lt;- clip_circle(norm_cat_mkrf, lab5_plot_cent[1], lab5_plot_cent[2], radius) #clip plot from norm_cat_mkrf\n  output_file &lt;- paste(\"C:/Users/hphung.stu/Downloads/GEM521/Labs/Lab 5/Data/Lab5_Plots/Lab5_Plot_\", \n                       i, \".las\", sep = \"\") #output directory as string\n  writeLAS(assign(paste(\"C:/Users/hphung.stu/Downloads/GEM521/Labs/Lab 5/Data/Lab5_Plots/Lab5_Plot_\", \n                        i, sep = \"\"), plot_las), output_file) #write'MKRF_Plot_i' to output dir.\n}\n\nChunk 1 of 1 (100%): state ✓\n\n\n\n\n\n\n\n\n\nChunk 1 of 1 (100%): state ✓\n\n\nChunk 1 of 1 (100%): state ✓\n\n\n\n\n\n\n\n\n\nChunk 1 of 1 (100%): state ✓"
  },
  {
    "objectID": "gem521_lab5.html#pre-processing-the-data",
    "href": "gem521_lab5.html#pre-processing-the-data",
    "title": "Individual Trees Detecting using different methods",
    "section": "Pre-processing the data",
    "text": "Pre-processing the data\nLoad the necessary library\n\nlibrary(lidR)\nlibrary(terra)\nlibrary(tidyverse)\nlibrary(rgl)\n\nPreparation of data for analysis\nFor this study, the LiDAR point cloud data, stored in .las files, had already been normalized. This pre-processing step simplifies subsequent analysis by adjusting the elevation values relative to the ground surface rather than absolute elevation.\n\n# Read normalized .las file into catalog for further processing\nnorm_cat_mkrf &lt;- readLAScatalog(\"C:/Users/hphung.stu/Downloads/GEM521/Labs/Lab 2/L2_data/Data/Normalized\")\n\n# Filter the points with height below 0m and above 65m\nopt_filter(norm_cat_mkrf) &lt;- '-drop_z_below 0 -drop_z_above 65'\n\nExtract the specific plot. The coordinate of the plot is listed in the .csv files.\n\n# Extract specific plot\nlab5_plot_table &lt;- read.csv(\"C:/Users/hphung.stu/Downloads/GEM521/Labs/Lab 5/Data/lab5_Plots.csv\")\n\n#define the radius\nradius &lt;- 154\n\n#use for loop to extract the plots\nfor (i in 1:nrow(lab5_plot_table)){\n  lab5_plot_cent &lt;- c(lab5_plot_table$X[i], lab5_plot_table$Y[i]) #extract plot center coordinates\n  plot_las &lt;- clip_circle(norm_cat_mkrf, lab5_plot_cent[1], lab5_plot_cent[2], radius) #clip plot from norm_cat_mkrf\n  output_file &lt;- paste(\"C:/Users/hphung.stu/Downloads/GEM521/Labs/Lab 5/Data/Lab5_Plots/Lab5_Plot_\", \n                       i, \".las\", sep = \"\") #output directory as string\n  writeLAS(assign(paste(\"C:/Users/hphung.stu/Downloads/GEM521/Labs/Lab 5/Data/Lab5_Plots/Lab5_Plot_\", \n                        i, sep = \"\"), plot_las), output_file) #write'MKRF_Plot_i' to output dir.\n}\n\nChunk 1 of 1 (100%): state ✓\n\n\n\n\n\n\n\n\n\nChunk 1 of 1 (100%): state ✓\n\n\nChunk 1 of 1 (100%): state ✓\n\n\n\n\n\n\n\n\n\nChunk 1 of 1 (100%): state ✓"
  },
  {
    "objectID": "gem521_lab5.html#detect-individual-trees-using-a-point-cloud",
    "href": "gem521_lab5.html#detect-individual-trees-using-a-point-cloud",
    "title": "Individual Trees Detecting using different methods",
    "section": "Detect individual trees using a point cloud",
    "text": "Detect individual trees using a point cloud\n\n# Create a list to store the segmented plots\nsegmented_plots &lt;- list()\n\n# Segmented trees for each plot\nfor (i in 1:4) {\n  plot_name &lt;- paste0(\"Lab5_Plot_\", i)\n  las_file &lt;- paste0(\"C:/Users/hphung.stu/Downloads/GEM521/Labs/Lab 5/Data/Lab5_Plots/\", plot_name, \".las\")\n  \n  #read las file in lab5\n  lab5_las &lt;- readLAS(las_file)\n  \n  #segment trees using li2012 algorithm \n  segmented_plot &lt;- segment_trees(lab5_las, li2012(dt1 = 1.5, \n                                                   dt2 = 2, \n                                                   R = 2, \n                                                   Zu = 15, \n                                                   speed_up = 10, \n                                                   hmin = 2))\n  segmented_plots[[i]] &lt;- segmented_plot\n}\n\n\n# Plot each segmented plot colored by Tree ID\nfor (i in 1:4) {\n  plot(segmented_plots[[i]], color = \"treeID\", main = paste(\"Plot\", i))\n}"
  },
  {
    "objectID": "gem521_lab5.html#detect-individual-trees-using-a-chm",
    "href": "gem521_lab5.html#detect-individual-trees-using-a-chm",
    "title": "Individual Trees Detecting using different methods",
    "section": "Detect individual trees using a CHM",
    "text": "Detect individual trees using a CHM\n\n# Create CHM for plot 1 using pitfree algorithm\nchm_plot1 &lt;- rasterize_canopy(Lab5_Plot_1,\n                              res = 0.5,\n                              algorithm = pitfree(thresholds = c(0, 10, 20, 30),\n                                                  subcircle = 0.2,\n                                                  max_edge = c(0, 1)))\n\n# Plot the CHM\nplot(chm_plot1, main = \"CHM - Plot 1\")\n\n\n\n\n\n\n\n\n\n# Locate tree tops using lmf algorithm\ntree_tops &lt;- locate_trees(chm_plot1,\n                          lmf(ws = 5, hmin = 2))\n\n# Plot CHM\nplot(chm_plot1, main = \"Tree Top Detection - Plot 1\")\n\n# Overlay detected tree tops in red\nplot(tree_tops, add = TRUE, col = \"red\", pch = 20)\n\n\n\n\n\n\n\n\n\n# Using Dalponte and Coomes 2016 algorithm to detect individual trees\ntree_crowns_plot1 &lt;- segment_trees(Lab5_Plot_1, dalponte2016(chm_plot1, \n                                                             tree_tops,\n                                                             th_tree = 2,\n                                                             th_seed = 0.45,\n                                                             th_cr = 0.55,\n                                                             max_cr = 10,\n                                                             ID = \"treeID\"))\nplot(tree_crowns_plot1, color = \"treeID\")\n\n\n\n\nFigure 1. ITD using Li et al. 2012 method\n\n\nFigure 2. ITD using Dalponte and Coomes 2016 method\n\nPerforming individual tree detection for plot 2 with different resolution (0.5m, 2m, 4m, and 10m)\n\n# Define resolution\nresolutions &lt;- c(0.5, 2, 4, 10)\n\n# Create empty lists to store results\nchm_list_plot2 &lt;- list()\ntree_tops_list_plot2 &lt;- list()\ntree_crowns_list_plot2 &lt;- list()\n\n# Set up a 2x2 plotting layout\npar(mfrow = c(2,2)) \n\n# Performing loop through each resolution\nfor (res in resolutions) {\n  \n  # create CHM using pitfree algorithm\n  chm_plot2 &lt;- rasterize_canopy(Lab5_Plot_2,\n                                res = res,\n                                algorithm = pitfree(thresholds = c(0, 10, 20, 30),\n                                                    subcircle = 0.2,\n                                                    max_edge = c(0,1)))\n  # store the CHM to the chm_list_plot2\n  chm_list_plot2[[as.character(res)]] &lt;- chm_plot2\n  \n  # locate tree tops using lmf algorithm\n  tree_tops_plot2 &lt;- locate_trees(chm_plot2, lmf(ws = 5, hmin = 2))\n  # store the tree tops to the tree_tops_list_plot2\n  tree_tops_list_plot2[[as.character(res)]] &lt;- tree_tops_plot2\n  \n  # perform tree segmentation using Dalponte and Coomes (2016) algorithm\n  tree_crowns_plot2 &lt;- segment_trees(Lab5_Plot_2,\n                                     dalponte2016(chm_plot2,\n                                                  tree_tops_plot2,\n                                                  th_tree = 2,\n                                                  th_seed = 0.45,\n                                                  th_cr = 0.55,\n                                                  max_cr = 10,\n                                                  ID = \"treeID\"))\n  # store segment tree crowns to the tree_crown_list_plot2\n  tree_crowns_list_plot2[[as.character(res)]] &lt;- tree_crowns_plot2\n  \n  # plot CHM and tree segmentation\n  plot(chm_plot2, main = paste(\"CHM Plot 2(\", res, \"m)\", sep = \"\"))\n  plot(tree_crowns_plot2, main = paste(\"Tree Segmentation Plot 2 (\", res, \"m)\", sep = \"\"), color = \"treeID\")\n  \n}"
  }
]